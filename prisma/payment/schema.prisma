// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client/payment"
}

datasource db {
  provider = "postgresql"
  url      = env("PAYMENT_DB_URL")
}

model PaymentMethod {
  id        Int      @id @default(autoincrement())
  code      String   @db.VarChar(50)
  name      String   @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted Boolean  @default(false) @map("is_deleted")

  payments  Payment[]

  @@map("payment_methods")
}

model Payment {
  id              Int           @id @default(autoincrement())
  paymentMethodId Int           @map("payment_method_id")
  orderId         Int           @map("order_id")
  transactionId   String        @unique @map("transaction_id") @db.VarChar(100)
  status          String        @default("pending") @db.VarChar(50)
  amount          Int
  payDate         String?       @map("pay_date") @db.VarChar(50)      
  createdAt       DateTime      @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt       DateTime      @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted       Boolean       @default(false) @map("is_deleted")

  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])

  @@index([orderId])
  @@index([paymentMethodId])
  @@map("payment")
}
