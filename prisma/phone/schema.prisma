// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client/phone"
}

datasource db {
  provider = "postgresql"
  url      = env("PHONE_DB_URL")
}

model Image {
  id        Int      @id @default(autoincrement())
  imageUrl  String   @db.VarChar(255) @map("image_url")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted Boolean  @default(false) @map("is_deleted")

  brands    Brand[]
  colors    VariantColor[]
  variants  VariantImage[]

  @@map("images")
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  imageId   Int      @map("image_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted Boolean  @default(false) @map("is_deleted")

  image     Image    @relation(fields: [imageId], references: [id])

  phones    Phone[]

  @@index([imageId])
  @@map("brands")
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(100)
  parentId  Int?       @map("parent_id")
  createdAt DateTime   @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime   @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted Boolean    @default(false) @map("is_deleted")

  parent    Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  
  children  Category[] @relation("CategoryToCategory")
  phones    Phone[]

  @@map("categories")
}

model Phone {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  brandId     Int      @map("brand_id")
  categoryId  Int      @map("category_id")
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt   DateTime @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted   Boolean  @default(false) @map("is_deleted")

  brand       Brand    @relation(fields: [brandId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])

  variants    PhoneVariant[]

  @@index([brandId])
  @@index([categoryId])
  @@map("phones")
}

model Color {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(50)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted Boolean  @default(false) @map("is_deleted")

  variants  VariantColor[]
  inventories Inventory[]

  @@map("colors")
}

model PhoneVariant {
  id             Int      @id @default(autoincrement())
  phoneId        Int      @map("phone_id")
  variantName    String   @db.VarChar(100) @map("variant_name")
  description    String?  @db.Text
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt      DateTime @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted      Boolean  @default(false) @map("is_deleted")

  phone          Phone    @relation(fields: [phoneId], references: [id])

  colors         VariantColor[]
  prices         VariantPrice[]
  discounts      VariantDiscount[]
  images         VariantImage[]
  inventories    Inventory[]
  specifications VariantSpecification[]
  reviews        Review[]

  @@index([phoneId])
  @@map("phone_variants")
}

model VariantColor {
  variantId Int          @map("variant_id")
  colorId   Int          @map("color_id")
  imageId   Int          @map("image_id")
  createdAt DateTime     @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime     @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted Boolean      @default(false) @map("is_deleted")

  variant   PhoneVariant @relation(fields: [variantId], references: [id])
  color     Color        @relation(fields: [colorId], references: [id])
  image     Image        @relation(fields: [imageId], references: [id])

  @@id([variantId, colorId, imageId])
  @@map("variant_colors")
}

model VariantPrice {
  id        Int          @id @default(autoincrement())
  variantId Int          @map("variant_id")
  price     Decimal      @db.Decimal(10,2)
  startDate DateTime     @map("start_date") @db.Timestamptz()
  endDate   DateTime?    @map("end_date") @db.Timestamptz()
  createdAt DateTime     @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime     @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted Boolean      @default(false) @map("is_deleted")
  
  variant   PhoneVariant @relation(fields: [variantId], references: [id])

  @@index([variantId])
  @@map("variant_prices")
}

model VariantDiscount {
  id              Int          @id @default(autoincrement())
  variantId       Int          @map("variant_id")
  discountPercent Decimal      @db.Decimal(5,2) @map("discount_percent")
  startDate       DateTime     @map("start_date") @db.Timestamptz()
  endDate         DateTime?    @map("end_date") @db.Timestamptz()
  createdAt       DateTime     @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt       DateTime     @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted       Boolean      @default(false) @map("is_deleted")

  variant         PhoneVariant @relation(fields: [variantId], references: [id])

  @@index([variantId])
  @@map("variant_discounts")
}

model VariantImage {
  id        Int          @id @default(autoincrement())
  variantId Int          @map("variant_id")
  imageId   Int          @map("image_id")
  createdAt DateTime     @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime     @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted Boolean      @default(false) @map("is_deleted")

  variant   PhoneVariant @relation(fields: [variantId], references: [id])
  image     Image        @relation(fields: [imageId], references: [id])

  @@index([variantId])
  @@index([imageId])
  @@map("variant_images")
}

model Specification {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted Boolean  @default(false) @map("is_deleted")

  variants  VariantSpecification[]

  @@map("specifications")
}

model VariantSpecification {
  variantId     Int           @map("variant_id")
  specId        Int           @map("spec_id")
  info          String        @db.VarChar(255)
  valueNumeric  Float?        @map("value_numeric")
  unit          String?       @map("unit")
  createdAt     DateTime      @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt     DateTime      @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted     Boolean       @default(false) @map("is_deleted")

  variant       PhoneVariant  @relation(fields: [variantId], references: [id])
  specification Specification @relation(fields: [specId], references: [id])

  @@id([variantId, specId])
  @@map("variant_specifications")
}

model Inventory {
  id            Int          @id @default(autoincrement())
  variantId     Int          @map("variant_id")
  colorId       Int          @map("color_id")
  sku           String       @db.VarChar(50)
  stockQuantity Int          @map("stock_quantity")
  createdAt     DateTime     @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt     DateTime     @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted     Boolean      @default(false) @map("is_deleted")

  variant       PhoneVariant @relation(fields: [variantId], references: [id])
  color         Color        @relation(fields: [colorId], references: [id])

  @@unique([variantId, colorId])
  @@index([variantId])
  @@index([colorId])
  @@map("inventories")
}

model Review {
  id         Int      @id @default(autoincrement())
  orderId    Int      @map("order_id")
  customerId Int      @map("customer_id")
  variantId  Int      @map("variant_id")
  rating     Int      @db.SmallInt
  comment    String?  @db.VarChar(255)
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt  DateTime @default(now()) @map("updated_at") @db.Timestamptz()
  isDeleted  Boolean  @default(false) @map("is_deleted")

  variant PhoneVariant @relation(fields: [variantId], references: [id])

  @@unique([customerId, orderId, variantId])
  @@index([orderId])
  @@index([customerId])
  @@index([variantId])
  @@map("reviews")
}